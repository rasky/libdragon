on: workflow_call

jobs:
  Build-Tools-Windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
       include: [
         { sys: mingw64, arch: x86_64, build: tools},
         { sys: mingw32, arch: i686,   build: tools}
       ]
    steps:
     - uses: msys2/setup-msys2@v2
       with:
         msystem: ${{matrix.sys}}
         install: >-
           mingw-w64-${{ matrix.arch }}-libpng
           base-devel
           mingw-w64-${{ matrix.arch }}-toolchain
         update: true

     - uses: actions/checkout@v2
       with:
         fetch-depth: 0

     - name: Correct MSYS2 pthread.h to allow static libraries (otherwise you would need to use a lib DLL, rather than it being built into the EXE.)
       shell: msys2 {0}
       run: |
         sed -z 's/#else\n#define WINPTHREAD_API __declspec(dllimport)/#else\n#define WINPTHREAD_API/' /${{matrix.sys}}/include/pthread.h

     - name: Build ${{ matrix.build }}
       shell: msys2 {0}
       run: |
         make ${{ matrix.build }}

     - name: "Upload ${{ matrix.build }} executables"
       uses: actions/upload-artifact@v2
       with:
         name: windows-${{ matrix.arch }}-${{ matrix.build }}
         path: ${{ github.workspace }}/**/tools/**/*.exe
         
  Compile-Toolchain-Windows:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # We first compare the default branch to the event commit. In case this is
      # the default branch, this should return 0, skipping the build and using
      # the latest image from "Docker Build"
      - name: Compare files to default branch
        uses: ./.github/actions/path-diff
        id: path_diff
        with:
          base: ${{ format('refs/remotes/origin/{0}', github.event.repository.default_branch) }}
          head: ${{ github.sha }}
          paths: ${{ github.workspace }}/tools/build-toolchain.sh

      # Build the toolchain if toolchain files changed w.r.t default which is
      - name: Build x86_64 Toolchain
        if: ${{ steps.path_diff.outputs.changed == 1 }}
        run: |
          # Install required dependencies
          sudo apt-get install -yq wget bzip2 gcc g++ make file libmpfr-dev libmpc-dev zlib1g-dev texinfo git gcc-multilib
          # Install Windows cross compile specific dependencies
          sudo apt-get install -yq mingw-w64 libz-mingw-w64-dev autoconf autoconf-archive
          mkdir -p build/toolchain/windows-x86_64
          cp ./tools/build-toolchain.sh ./build/toolchain/windows-x86_64/build-toolchain.sh
          cd ./build/toolchain/windows-x86_64
          sudo  HOST=x86_64-w64-mingw32 \
                N64_INST=${{ github.workspace }}/build/toolchain/windows-x86_64/n64_toolchain \
                GMP_V=6.2.0 \
                MPC_V=1.2.1 \
                MPFR_V=4.1.0 \
                MAKE_V=4.2.1 \
                ./build-toolchain.sh
          # cd ${{ github.workspace }}
          # make && make install
      - name: Upload Toolchain Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "windows-x86_64-toolchain"
          path: ${{ github.workspace }}/**/n64_toolchain/**/*
